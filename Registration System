#include <bits/stdc++.h>


#define ll long long
#define Mohamed cout<<"YES"<<endl;
#define Awad cout<<"NO"<<endl;
#define test int t=0;cin>>t;while(t--)
#define Done return 0;
#define fast ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define clr(v, d) memset(v, d, sizeof(v))
#define endl "\n"
const int S = 1e6 + 5;
using namespace std;


vector<ll> prefix(int n , vector<int> a)
{

  ll sum=a[0];
  vector<ll>pre(n);
  pre[0]=a[0];
  for(int i=1;i<n;i++)
  {
    pre[i] =a[i]+sum;
    sum=pre[i];
  }
  return pre;
}


void down(string &s)
{
  transform(s.begin(),s.end(),s.begin(),:: tolower);
}

void up(string &s)
{
  transform(s.begin(),s.end(),s.begin(),::toupper);
}

string convert_to_binary(int Decimal_Number)
{
  string s;
  while(Decimal_Number)
  {
    if(Decimal_Number%2!=0)
    {
      s.push_back('1');
    }
    else
    {
      s.push_back('0');
    }
    Decimal_Number/=2;
  }
  reverse(s.begin(),s.end());
  return s;
}
int convert_to_decimal(string binary_number)
{
  ll ans=0;
  int j=0;
  for(int i = binary_number.size()-1 ;i >=0; i--)
  {
    if(binary_number[i]=='1')ans+=pow(2,j);

    j++;
  }
  return ans;
}

int binary(int n,int x,vector<int>a) {
  a.resize(S,0);
  int l = 0, r = n-1;
  int ans = -1;
  while (l <= r) //{1,2,3,4,5,6,7}
  {
    ll mid = (l + r) / 2;
    if (x == a[mid])
    {
      ans = mid;
      r=mid-1;
    }
    else if (a[mid] < x) {
      l = mid + 1;
    } else {

      r = mid - 1;
    }
  }
  a.clear();
  return ans;
}
bool check(ll n){
  if(n == 1) return false;
  ll t = sqrt(n);
  if(t * t != n) return false;
  for(int i = 2 ;i <= sqrt(t) ;i++)
    if(t % i == 0) return false;
  return true;
}

void solve() {
  int n;
  cin >> n;
//  set<string> myset;
  string s;
  map<string, int> mp;
  while (n--) {
    cin >> s;
    if (mp[s] == 0)
      cout << "OK" << endl;
    else
      cout << s << mp[s] << endl;
    mp[s]++;
  }
}



int main()
{
  fast

    solve();

}









